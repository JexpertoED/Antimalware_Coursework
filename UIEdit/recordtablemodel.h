#ifndef RECORDTABLEMODEL_H
#define RECORDTABLEMODEL_H
#include <QAbstractTableModel>
#include "record.h"

class RecordTableModel : public QAbstractTableModel
{
    Q_OBJECT
    QVector<Record*> records;
public:
    RecordTableModel(QObject* parent);
    ~RecordTableModel();
    int rowCount(const QModelIndex &parent) const override;
    int columnCount(const QModelIndex &parent) const override;
    QVariant data(const QModelIndex &index, int role) const override;
    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;
    bool setData(const QModelIndex& index, const QVariant& value, int role) override;
    Qt::ItemFlags flags(const QModelIndex& index) const override;
    void updateRow(int row);
    void removeRow(int row);
    void clear();
    bool insertRow(int row, QModelIndex& parent);
    bool insertRows();
    void appendRecord(Record *record);
    QVector<Record*>& getRecords();

};

#endif // RECORDTABLEMODEL_H
